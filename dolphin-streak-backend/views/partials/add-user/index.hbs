<div class="flex h-screen overflow-hidden m-2 gap-2 font-sans">
    {{> sidebar}}

    <div class="flex-1 bg-white rounded-3xl p-8 shadow-lg">
        <div class="max-w-4xl mx-auto">
            <h1 class="text-[#0088CC] text-2xl font-medium mb-6">Create New User</h1>

            <form id="create-user-form">
                <div class="grid grid-cols-2 gap-6">
                    <div class="form-group">
                        <label class="block text-gray-600 mb-2">First Name</label>
                        <input type="text" name="firstName" placeholder="Enter first name"
                            class="w-full px-4 py-2 rounded-lg border border-gray-300 focus:outline-none focus:border-[#0088CC]"
                            required>
                    </div>
                    <div class="form-group">
                        <label class="block text-gray-600 mb-2">Last Name</label>
                        <input type="text" name="lastName" placeholder="Enter last name"
                            class="w-full px-4 py-2 rounded-lg border border-gray-300 focus:outline-none focus:border-[#0088CC]">
                    </div>
                </div>

                <div class="gap-6 mt-6">
                    <div class="form-group">
                        <label class="block text-gray-600 mb-2">Email</label>
                        <input type="email" name="email" placeholder="Enter email address"
                            class="w-full px-4 py-2 rounded-lg border border-gray-300 focus:outline-none focus:border-[#0088CC]"
                            required>
                    </div>
                </div>

                <div class="grid grid-cols-2 gap-6 mt-6">
                    <div class="form-group">
                        <label class="block text-gray-600 mb-2">Password</label>
                        <input type="password" name="password" placeholder="Create password"
                            class="w-full px-4 py-2 rounded-lg border border-gray-300 focus:outline-none focus:border-[#0088CC]"
                            required>
                    </div>
                    <div class="form-group">
                        <label class="block text-gray-600 mb-2">Confirm Password</label>
                        <input type="password" name="confirmPassword" placeholder="Confirm password"
                            class="w-full px-4 py-2 rounded-lg border border-gray-300 focus:outline-none focus:border-[#0088CC]"
                            required>
                    </div>
                </div>

                <div class="mt-6">
                    <label class="block text-gray-600 mb-2">Birth Date</label>
                    <input type="date" name="birthDate" placeholder="dd/mm/yyyy"
                        class="w-full px-4 py-2 rounded-lg border border-gray-300 focus:outline-none focus:border-[#0088CC]">
                </div>

                <div class="mt-8 space-y-4">
                    <button type="submit"
                        class="w-full bg-[#0088CC] text-white py-3 rounded-lg hover:bg-[#0077b3] transition-colors">
                        Create Account
                    </button>

                    <a class="block">
                        <button type="button" class="text-[#0088CC] hover:text-[#0077b3] transition-colors"
                            onclick="history.back()">
                            Back
                        </button>
                    </a>
                </div>
            </form>
        </div>
    </div>
    <script>
        document.getElementById('create-user-form').addEventListener('submit', async (event) => {
            event.preventDefault();
            const form = event.target;
            const formData = new FormData(form);
            const data = Object.fromEntries(formData.entries());

            try {
                const response = await fetchAPI('/api/users', 'POST', data);
                console.log('User created:', response);
                showToaster('success', { message: 'User created successfully.', timeout: 5000 });
                // Redirect or show success message
                window.location.href = '/';
            } catch (error) {
                showToaster('danger', { message: error, timeout: 5000 });
                console.error('Error creating user:', JSON.stringify(error));
                console.log({error})
                // Show error message
            }
        });
    </script>
</div>