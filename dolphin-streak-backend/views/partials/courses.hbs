<div class="flex">
    {{> sidebar}}

    <div class="flex-grow p-6 bg-gray-100 overflow-auto">
        <div class="bg-white rounded-lg shadow-md p-6 border border-gray-300">
            <!-- Chart Section -->
            <div class="chart-container bg-gray-200 rounded-lg p-4 mb-6 flex justify-around gap-2">
                <div class="bar bg-blue-500 w-20 h-24 rounded"></div>
                <div class="bar bg-blue-500 w-20 h-32 rounded"></div>
                <div class="bar bg-blue-500 w-20 h-28 rounded"></div>
                <div class="bar bg-blue-500 w-20 h-36 rounded"></div>
                <div class="bar bg-blue-500 w-20 h-20 rounded"></div>
            </div>

            <h2 class="text-2xl font-bold text-center mb-6 text-gray-800">Course Graduation Rate</h2>

            <!-- Course List Section -->
            <div class="flex justify-between items-center mb-6">
                <h3 class="text-xl font-semibold text-gray-700">List Course</h3>
                <a href="/courses/add" class="btn btn-primary">
                    + Add New Course
                </a>
            </div>

            <div class="overflow-x-auto">
                <table class="w-full bg-white shadow-md rounded-lg overflow-hidden border border-gray-300">
                    <thead class="bg-gray-100 border-b">
                        <tr>
                            <th class="p-3 text-left text-sm font-medium text-gray-500 uppercase tracking-wider">Profile
                            </th>
                            <th class="p-3 text-left text-sm font-medium text-gray-500 uppercase tracking-wider">Title
                            </th>
                            <th class="p-3 text-left text-sm font-medium text-gray-500 uppercase tracking-wider">Study
                                Languages</th>
                            <th class="p-3 text-left text-sm font-medium text-gray-500 uppercase tracking-wider">
                                Available Levels</th>
                            <th class="p-3 text-left text-sm font-medium text-gray-500 uppercase tracking-wider">Actions
                            </th>
                        </tr>
                    </thead>
                    <tbody id="course-list">
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', async () => {
        try {
            const response = await fetchAPI('/api/courses', 'GET');
            if (response.messages === '3 courses found') {
                const courses = response.data;
                const courseListElement = document.getElementById('course-list');
                courses.forEach(course => {
                    const row = `
                    <tr>
                        <td class="p-3">
                            <img src="${course.thumbnail || '/images/default-course.png'}" alt="Course Profile" class="w-12 h-12 rounded-full object-cover">
                        </td>
                        <td class="p-3 text-sm text-gray-700">${course.name}</td>
                        <td class="p-3 text-sm text-gray-700">${course.language.name}</td>
                        <td class="p-3 text-sm text-gray-700">${course.levels.map(level => level.name).join(', ')}</td>
                        <td class="p-3">
                            <div class="flex space-x-2">
                                <a href="/courses/edit/${course._id}" class="bg-blue-500 text-white py-1 px-3 rounded hover:bg-blue-600 transition-colors">
                                    <i class="fas fa-edit"></i> Edit
                                </a>
                                <button onclick="confirmDelete('${course._id}')" class="bg-red-500 text-white py-1 px-3 rounded hover:bg-red-600 transition-colors">
                                    <i class="fas fa-trash"></i> Delete
                                </button>
                            </div>
                        </td>
                    </tr>`;
                    courseListElement.insertAdjacentHTML('beforeend', row);
                });
            } else {
                showToaster('danger', { message: 'Failed to fetch course data.' });
            }
        } catch (error) {
            console.error('Error fetching course data:', error);
            showToaster('danger', { message: 'An error occurred while fetching course data.' });
        }
    });

    function confirmDelete(courseId) {
        showModal('warning', 'Are you sure?', 'Do you want to delete this course?', async () => {
            try {
                const response = await fetchAPI(`/api/courses/${courseId}`, 'DELETE');
                if (response.ok) {
                    showToaster('success', { message: 'Course deleted successfully.' });
                    window.location.reload();
                } else {
                    showToaster('danger', { message: 'Failed to delete course.' });
                }
            } catch (error) {
                console.error('Error deleting course:', error);
                showToaster('danger', { message: 'An error occurred while deleting the course.' });
            }
        });
    }
</script>